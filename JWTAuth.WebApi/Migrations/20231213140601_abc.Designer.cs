// <auto-generated />
using System;
using JWTAuth.WebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace khiemnguyen.WebApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231213140601_abc")]
    partial class abc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JWTAuth.WebApi.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("quationNo")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("UserInfo", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2023, 12, 13, 21, 6, 1, 547, DateTimeKind.Local).AddTicks(8287),
                            DisplayName = "abc",
                            Email = "abc@abc.com",
                            FullName = "API",
                            Password = "abc",
                            Role = "Admin",
                            UserName = "API"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateTime(2023, 12, 13, 21, 6, 1, 547, DateTimeKind.Local).AddTicks(8300),
                            DisplayName = "Allen",
                            Email = "user@abc.com",
                            FullName = "Allen",
                            Password = "abc",
                            Role = "Customer",
                            UserName = "Allen"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateTime(2023, 12, 13, 21, 6, 1, 547, DateTimeKind.Local).AddTicks(8301),
                            DisplayName = "Taro",
                            Email = "admin@abc.com",
                            FullName = "Taro",
                            Password = "abc",
                            Role = "Admin",
                            UserName = "Taro"
                        },
                        new
                        {
                            UserId = 4,
                            CreatedDate = new DateTime(2023, 12, 13, 21, 6, 1, 547, DateTimeKind.Local).AddTicks(8302),
                            DisplayName = "Jery",
                            Email = "caterer@abc.com",
                            FullName = "Jery",
                            Password = "abc",
                            Role = "Caterer",
                            UserName = "Jery"
                        });
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Appetizer"
                        },
                        new
                        {
                            id = 2,
                            Name = "Starter"
                        },
                        new
                        {
                            id = 3,
                            Name = "Main course"
                        },
                        new
                        {
                            id = 4,
                            Name = "Drink"
                        },
                        new
                        {
                            id = 5,
                            Name = "Desert"
                        });
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Favor_Cater", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Caterid")
                        .HasColumnType("int");

                    b.Property<int>("Custid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Favor_Caters");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.FeedBack", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Menuid")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Replyto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<byte[]>("image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("orderid")
                        .HasColumnType("int");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Food", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Caterid")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Category = "Appetizer",
                            Caterid = 4,
                            Description = "Food appertise",
                            Name = "Food appertise"
                        },
                        new
                        {
                            id = 2,
                            Category = "Starter",
                            Caterid = 4,
                            Description = "Food Starter",
                            Name = "Food Starter"
                        },
                        new
                        {
                            id = 3,
                            Category = "Main course",
                            Caterid = 4,
                            Description = "Food Main course",
                            Name = "Food Main course"
                        },
                        new
                        {
                            id = 4,
                            Category = "Drink",
                            Caterid = 4,
                            Description = "Food Drink",
                            Name = "Food Drink"
                        },
                        new
                        {
                            id = 5,
                            Category = "Desert",
                            Caterid = 4,
                            Description = "Food Desert",
                            Name = "Food Desert"
                        });
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Food_in_Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Foodid")
                        .HasColumnType("int");

                    b.Property<int>("Menuid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Food_In_Menus");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaterID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("israted")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Menues");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Menu_Tag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Menu_Tags");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message_note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_received")
                        .HasColumnType("int");

                    b.Property<int>("User_sent")
                        .HasColumnType("int");

                    b.Property<int>("isCanceled")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Caterid")
                        .HasColumnType("int");

                    b.Property<int?>("Custid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DelivDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GuestNum")
                        .HasColumnType("int");

                    b.Property<int>("IsCanceled")
                        .HasColumnType("int");

                    b.Property<int>("Menuid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrdDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("israted")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("khiemnguyen.WebApi.Models.Tag_Include", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Menuid")
                        .HasColumnType("int");

                    b.Property<int>("Tagid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Tag_Includes");
                });
#pragma warning restore 612, 618
        }
    }
}
